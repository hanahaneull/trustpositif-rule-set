name: Release

on:
  workflow_dispatch: 
  schedule:
    - cron: 0 0 */3 * *

jobs:
  run:
    name: run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
          cache: true
      
      - name: Install deps
        id: deno-install
        run: deno install

      - name: Download database
        id: program-database
        run: deno run download

      - name: Process database
        id: program-process
        run: deno run process

      - name: Download sing-box
        id: download-sing-box
        uses: robinraju/release-downloader@v1
        with:
          repository: 'SagerNet/sing-box'
          tag: 'v1.12.3'
          fileName: 'sing-box-1.12.3-linux-amd64.tar.gz'
          extract: true

      - name: Convert database
        id: program-convert
        run: |
          chmod +x sing-box-1.12.3-linux-amd64/sing-box
          mv sing-box-1.12.3-linux-amd64/sing-box output
          cd output
          ./sing-box rule-set compile trustpositif-ip.json
          ./sing-box rule-set compile trustpositif-domain.json

      - name: time
        id: time
        run: echo "time=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: ${{ steps.time.outputs.time }}
          draft: false
          prerelease: false

      - name: Upload IP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/trustpositif-ip.srs
          asset_name: trustpositif-ip.srs
          asset_content_type: application/octet-stream
      
      - name: Upload Domain
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/trustpositif-domain.srs
          asset_name: trustpositif-domain.srs
          asset_content_type: application/octet-stream
